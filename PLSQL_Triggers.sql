/*Billing Trigger*/
CREATE OR REPLACE TRIGGER BILLING
AFTER UPDATE ON BOOKING
FOR EACH ROW
WHEN (NVL(TO_CHAR(NEW.ACT_RET_DT_TIME),'NULL') <> 'NULL' AND
NEW.BOOKING_STATUS ='R')
DECLARE
-- declaration section
lastBillId BILLING.BILL_ID%TYPE;
newBillId BILLING.BILL_ID%TYPE;
discountAmt BILLING.DISCOUNT_AMOUNT%TYPE;
totalLateFee BILLING.TOTAL_LATE_FEE%TYPE;
totalTax BILLING.TAX_AMOUNT%TYPE;
totalAmountBeforeDiscount BILLING.TOTAL_AMOUNT%TYPE;
finalAmount BILLING.TOTAL_AMOUNT%TYPE;
BEGIN
SELECT BILL_ID INTO lastBillId FROM ( SELECT BILL_ID, ROWNUM AS
RN FROM BILLING)
WHERE RN= (SELECT MAX(ROWNUM) FROM BILLING);
newBillId := 'BL' || TO_CHAR(TO_NUMBER(SUBSTR(lastBillId,3))+1);
CALCULATE_LATE_FEE_AND_TAX(:NEW.ACT_RET_DT_TIME, :NEW.RET_DT_TIME,
:NEW.REG_NUM,:NEW.AMOUNT, totalLateFee, totalTax);
totalAmountBeforeDiscount := :NEW.AMOUNT + totalLateFee + totalTax;
CALCULATE_DISCOUNT_AMOUNT(:NEW.DL_NUM, totalAmountBeforeDiscount,
:NEW.DISCOUNT_CODE, discountAmt);
finalAmount := totalAmountBeforeDiscount - discountAmt;
--insert new bill into the billing_details table
INSERT INTO BILLING (BILL_ID,BILL_DATE,BILL_STATUS,DISCOUNT_AMOUNT,
TOTAL_AMOUNT,TAX_AMOUNT,BOOKING_ID,TOTAL_LATE_FEE)
VALUES (newBillId,to_date(SYSDATE,'YYYY-MM-DD'),'P',
discountAmt,finalAmount,totalTax,:NEW.BOOKING_ID,totalLateFee);
END;
/

/*Update Bike Trigger*/
CREATE OR REPLACE TRIGGER UPDATE_BIKE
AFTER UPDATE ON BOOKING
FOR EACH ROW
WHEN (NVL(TO_CHAR(NEW.ACT_RET_DT_TIME),'NULL') <> 'NULL' OR NEW.BOOKING_STATUS ='C')
DECLARE
BEGIN
IF :NEW.BOOKING_STATUS ='C' THEN
UPDATE BIKE SET AVAILABILITY_FLAG = 'A' , LOC_ID = :NEW.PICKUP_LOC WHERE
REGISTRATION_NUMBER = :NEW.REG_NUM;
ELSE
IF NVL(TO_CHAR(:NEW.ACT_RET_DT_TIME),'NULL') <> 'NULL' THEN
UPDATE BIKE SET AVAILABILITY_FLAG = 'A' , LOC_ID = :NEW.DROP_LOC WHERE REGISTRATION_NUMBER =
:NEW.REG_NUM;
END IF;
END IF;
END;
/


